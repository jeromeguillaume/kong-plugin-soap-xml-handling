{
    "openapi": "3.0.0",
    "servers": [
      {
        "url": "https://kong.client.com"
      }
    ],
    "info": {
      "contact": {
        "email": "me@kennethreitz.org",
        "url": "https://kennethreitz.org",
        "name": "Kenneth Reitz"
      },
      "description": "A cool simple REST API service",
      "title": "httpbin based on httpbin.org",
      "version": "1.3.1"
    },
    "paths": {
      "/scenhttpbin1/uuid": {
        "get": {
          "description": "Generate and get an UUID",
          "operationId": "get_uuid",
          "responses": {
            "200": {
              "description": "A UUID4."
            }
          },
          "summary": "Return a UUID4.",
          "tags": [
            "Generate UUID"
          ]
        }
      },
      "/scenhttpbin1/anything": {
        "get": {
          "description": "returns all your request",
          "operationId": "anything",
          "responses": {
            "200": {
              "description": "The anything endpoint"
            }
          },
          "summary": "Return anything data.",
          "tags": [
            "Anything"
          ]
        },
        "post": {
          "summary": "Echo request",
          "description": "Echoes back the request body and headers.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "val1": { "type": "string" },
                    "val2": { "type": "string" },
                    "val3": { "type": "string" },
                    "val4": { "type": "string" }
                  },
                  "required": ["val1", "val2", "val3", "val4"]
                },
                "example": {
                  "val1": "value1-value1-value1-value1-value1",
                  "val2": "value2-value2-value2-value2-value2",
                  "val3": "value3-value3-value3-value3-value3",
                  "val4": "value4-value4-value4-value4-value4"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful echo",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "args": { "type": "object" },
                      "data": { "type": "string" },
                      "files": { "type": "object" },
                      "form": { "type": "object" },
                      "headers": {
                        "type": "object",
                        "additionalProperties": { "type": "string" }
                      },
                      "json": {
                        "type": "object",
                        "properties": {
                          "val1": { "type": "string" },
                          "val2": { "type": "string" },
                          "val3": { "type": "string" },
                          "val4": { "type": "string" }
                        }
                      },
                      "method": { "type": "string" },
                      "origin": { "type": "string" },
                      "url": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Anything"
          ]
        }
      },
      "/scenhttpbin1/anything/query": {
        "get": {
          "description": "returns all your query parameters",
          "operationId": "query",
          "parameters": [
            {
              "in": "query",
              "name": "exampleParam",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 5,
                "maximum": 25
              },
              "description": "A value between 5 and 25"
            }
          ],
          "responses": {
            "200": {
              "description": "The anything endpoint but with limitation on query"
            }
          },
          "summary": "Return anything data.",
          "tags": [
            "Anything",
            "Query"
          ]
        }
      },
      "/scenhttpbin1/delay/{delay_value}": {
        "get": {
          "description": "delay a responses by a defined number of secondes",
          "operationId": "delay",
          "parameters": [
            {
              "in": "path",
              "name": "delay_value",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 0,
                "maximum": 10
              },
              "description": "The delay in seconds"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns a delayed response"
            }
          },
          "summary": "Returns a delayed response (max of 10 seconds).",
          "tags": [
            "Delayed Response",
            "Path"
          ]
        }
      },
      "/scenhttpbin1/status/{codes}": {
        "get": {
          "description": "returns a http status code",
          "operationId": "status_code",
          "parameters": [
            {
              "in": "path",
              "name": "codes",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 200,
                "maximum": 599
              },
              "description": "The HTTP status code (200-599)"
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            },
            "300": {
              "description": "Redirection"
            },
            "400": {
              "description": "Client errors"
            },
            "500": {
              "description": "Server errors"
            }
          },
          "summary": "Return status code or random status code if more than one are given",
          "tags": [
            "Status Codes",
            "Path"
          ]
        }
      }
    },
    "tags": [
      {
        "description": "Creates a random UUID and returns it in a JSON structure",
        "name": "Generate UUID"
      },
      {
        "name": "Anything"
      },
      {
        "name": "Query"
      },
      {
        "name": "CatOrDog"
      },
      {
        "name": "Body"
      },
      {
        "name": "Delayed Response"
      },
      {
        "name": "Path"
      },
      {
        "name": "Status Codes"
      }
    ]
  }